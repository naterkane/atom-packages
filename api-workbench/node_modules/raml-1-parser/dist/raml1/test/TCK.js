"use strict";
/// <reference path="../../../typings/main.d.ts" />
var index = require("../../index");
var assert = require("assert");
var util = require("./test-utils");
var path = require("path");
var fs = require("fs");
describe('TCK tests', function () {
    it("Types", function () {
        testAPI('TCK/RAML10/Types 001/api.raml');
    });
    it("Trait 001", function () {
        testAPI('TCK/RAML10/Traits/Trait 001/api.raml');
    });
    it("Annotations 001", function () {
        testAPI('TCK/RAML10/Annotations 001/api.raml');
    });
    it("Annotations 002", function () {
        testAPI('TCK/RAML10/Annotations 002/api.raml');
    });
    it("Annotations 003", function () {
        testAPI('TCK/RAML10/Annotations 003/api.raml');
    });
    it("Bodies 001", function () {
        testAPI('TCK/RAML10/Bodies/Body 001/api.raml');
    });
    it("Instagram 1.0", function () {
        this.timeout(15000);
        testAPI('../example-ramls/Instagram1.0/api.raml', null, 'TCK/RAML10/Instagram1.0/api-tck.json');
    });
    it("Instagram 0.8", function () {
        this.timeout(15000);
        testAPI('../example-ramls/Instagram/api.raml', null, 'TCK/RAML08/Instagram/api-tck.json');
    });
    it("Libraries 001", function () {
        testAPI('TCK/RAML10/Libraries 001/api.raml');
    });
    it("Form Parameters", function () {
        testAPI('TCK/RAML08/Form Parameters/api.raml');
    });
    it("Overlays 001", function () {
        testAPI("TCK/RAML10/Overlays 001/apigateway.raml", [
            "TCK/RAML10/Overlays 001/apigateway-aws-overlay.raml"
        ]);
    });
    it("Overlays 002", function () {
        testAPI("TCK/RAML10/Overlays 002/api.raml", [
            "TCK/RAML10/Overlays 002/overlay.raml"
        ]);
    });
    it("Overlays 003", function () {
        testAPI("TCK/RAML10/Overlays 003/api.raml", [
            "TCK/RAML10/Overlays 003/overlay.raml"
        ]);
    });
    it("Extension example", function () {
        testAPI("TCK/RAML10/examples/raml1/overlays&extensions/extension/master.raml", [
            "TCK/RAML10/examples/raml1/overlays&extensions/extension/extension.raml"
        ], "TCK/RAML10/examples/raml1/overlays&extensions/extension/master-tck.json");
    });
    it("Overlay example", function () {
        testAPI("TCK/RAML10/examples/raml1/overlays&extensions/overlay/master.raml", [
            "TCK/RAML10/examples/raml1/overlays&extensions/overlay/slave.raml"
        ], "TCK/RAML10/examples/raml1/overlays&extensions/overlay/master-tck.json");
    });
});
function testAPI(apiPath, extensions, tckJsonPath) {
    if (extensions) {
        extensions = extensions.map(function (x) { return util.data(x); });
    }
    var api = index.loadApiSync(util.data(apiPath), extensions);
    var expanded = api.expand();
    expanded.setAttributeDefaults(true);
    var json = expanded.toJSON({ rootNodeDetails: true });
    if (!tckJsonPath) {
        var dir = path.dirname(util.data(apiPath));
        var fileName = path.basename(apiPath).replace(".raml", "-tck.json");
        tckJsonPath = path.resolve(dir, fileName);
    }
    var tckJson = JSON.parse(fs.readFileSync(util.data(tckJsonPath)).toString());
    var regExp = new RegExp('/errors\\[\\d+\\]/path');
    var diff = util.compare(json, tckJson).filter(function (x) { return !x.path.match(regExp); });
    if (diff.length == 0) {
        assert(true);
    }
    else {
        //fs.writeFileSync(util.data(tckJsonPath),JSON.stringify(json));
        console.log(diff.map(function (x) { return x.message("actual", "expected"); }).join("\n\n"));
        assert(false);
    }
}
//# sourceMappingURL=TCK.js.map