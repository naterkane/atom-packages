"use strict";
var rt = require("./typesystem");
var meta = require("./metainfo");
var restrictions_1 = require("./restrictions");
var restrictions_2 = require("./restrictions");
function example(t) {
    var ms = t.oneMeta(meta.Example);
    if (ms) {
        return ms.example();
    }
    var ms1 = t.oneMeta(meta.Examples);
    if (ms1) {
        var examples = ms1.examples();
        if (examples && examples.length > 0) {
            return examples[0];
        }
    }
    var d = t.oneMeta(meta.Default);
    if (d) {
        return d.value();
    }
    if (t.isObject()) {
        var result = {};
        t.meta().forEach(function (x) {
            if (x instanceof restrictions_2.PropertyIs) {
                var p = x;
                var ex = example(p.value());
                result[p.propertyName()] = ex;
            }
        });
        t.superTypes().forEach(function (x) {
            if (x.oneMeta(meta.Example) || x.oneMeta(meta.Examples)) {
                var ex = example(x);
                if (ex && typeof ex === "object") {
                    Object.keys(ex).forEach(function (key) {
                        result[key] = ex[key];
                    });
                }
            }
        });
        return result;
    }
    if (t.isArray()) {
        var c = t.oneMeta(restrictions_1.ComponentShouldBeOfType);
        var resultArray = [];
        if (c) {
            resultArray.push(example(c.value()));
        }
        return resultArray;
    }
    if (t.isUnion()) {
        return example(t.typeFamily()[0]);
    }
    if (t.isNumber()) {
        return 1;
    }
    if (t.isBoolean()) {
        return true;
    }
    return "some value";
}
exports.example = example;
var Example = (function () {
    function Example(_value, _empty) {
        if (_empty === void 0) { _empty = false; }
        this._value = _value;
        this._empty = _empty;
    }
    Example.prototype.isEmpty = function () {
        return this._empty;
    };
    Example.prototype.isJSONString = function () {
        return typeof this._value === "string" && ((this._value + "").trim().indexOf("{") == 0 || (this._value + "").trim().indexOf("[") == 0);
    };
    Example.prototype.isXMLString = function () {
        return typeof this._value === "string" && (this._value + "").trim().indexOf("<") == 0;
    };
    Example.prototype.isYAML = function () {
        if (typeof this._value === "string") {
            return !(this.isJSONString() || this.isXMLString());
        }
        return true;
    };
    Example.prototype.asString = function () {
        if (typeof this._value === "string") {
            return "" + this._value;
        }
        return this.expandAsString();
    };
    Example.prototype.asJSON = function () {
        if (this.isJSONString()) {
            try {
                return JSON.parse(this._value);
            }
            catch (e) {
                return null;
            }
        }
        if (this.isYAML()) {
            return this._value;
        }
        return this.expandAsString();
    };
    Example.prototype.original = function () {
        return this._value;
    };
    Example.prototype.expandAsString = function () {
        return JSON.stringify(this.expandAsJSON(), null, 2);
    };
    Example.prototype.expandAsJSON = function () {
        return this._value;
    };
    return Example;
}());
function exampleFromNominal(n) {
    var tp = n.getAdapter(rt.InheritedType);
    if (tp) {
        var ms1 = tp.oneMeta(meta.Examples);
        if (ms1) {
            var vl = ms1.value();
            var result = [];
            if (vl && typeof vl === "object") {
                Object.keys(vl).forEach(function (key) {
                    result.push(new Example(vl[key].content));
                });
            }
            return result;
        }
        var ms = tp.oneMeta(meta.Example);
        if (ms) {
            var exampleV = ms.example();
            if (exampleV) {
                return [new Example(ms.value())];
            }
        }
    }
    if (tp) {
        return [new Example(example(tp), true)];
    }
    return [];
}
exports.exampleFromNominal = exampleFromNominal;
//# sourceMappingURL=exampleBuilder.js.map